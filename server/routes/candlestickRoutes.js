const express = require("express");
const router = express.Router();
const Candlestick = require("../models/CandlestickModel");

// ‚úÖ API l·∫•y d·ªØ li·ªáu theo khung th·ªùi gian (1h, 24h, 7d)
router.get("/history/:symbol", async (req, res) => {
  try {
    const symbol = req.params.symbol.toUpperCase();
    const timeFrame = req.query.timeFrame || "1h"; // M·∫∑c ƒë·ªãnh l√† 1 gi·ªù
    let startTime = new Date();

    if (timeFrame === "1h") {
      startTime.setHours(startTime.getHours() - 1);
    } else if (timeFrame === "24h") {
      startTime.setHours(startTime.getHours() - 24);
    } else if (timeFrame === "7d") {
      startTime.setDate(startTime.getDate() - 7);
    }

    console.log(`üì© API l·∫•y d·ªØ li·ªáu t·ª´ ${startTime} cho ${symbol}`);

    // ‚úÖ Truy v·∫•n MongoDB ch·ªâ l·∫•y d·ªØ li·ªáu c·∫ßn thi·∫øt
    const data = await Candlestick.find(
      { symbol, timestamp: { $gte: startTime } },
      { _id: 0, timestamp: 1, open: 1, high: 1, low: 1, close: 1, volume: 1 } // ‚úÖ Ch·ªâ l·∫•y c√°c tr∆∞·ªùng c·∫ßn thi·∫øt
    ).sort({ timestamp: -1 }).lean(); // ‚úÖ S·ª≠ d·ª•ng `.lean()` ƒë·ªÉ gi·∫£m t·∫£i hi·ªáu su·∫•t

    res.json(data);
  } catch (err) {
    console.error("‚ùå L·ªói khi l·∫•y d·ªØ li·ªáu n·∫øn:", err);
    res.status(500).json({ error: "Server Error" });
  }
});

module.exports = router;
